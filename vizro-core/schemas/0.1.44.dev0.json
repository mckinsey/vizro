{
  "$defs": {
    "Accordion": {
      "additionalProperties": false,
      "description": "Accordion to be used as nav_selector in [`Navigation`][vizro.models.Navigation].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "accordion",
          "default": "accordion",
          "title": "Type",
          "type": "string"
        },
        "pages": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "default": {},
          "description": "Mapping from name of a pages group to a list of page IDs.",
          "title": "Pages",
          "type": "object"
        }
      },
      "title": "Accordion",
      "type": "object"
    },
    "Action": {
      "additionalProperties": false,
      "description": "Action to be inserted into `actions` of relevant component.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "default": [],
          "description": "List or dictionary of outputs modified by the action function. Each output can be specified as\n            `<model_id>` or `<model_id>.<argument_name>` or `<component_id>.<property>`. Defaults to `[]`.",
          "title": "Outputs"
        },
        "type": {
          "const": "action",
          "default": "action",
          "title": "Type",
          "type": "string"
        },
        "inputs": {
          "default": [],
          "description": "List of inputs provided to the action function. Each input can be specified as `<model_id>` or\n        `<model_id>.<argument_name>` or `<component_id>.<property>`. Defaults to `[]`.",
          "items": {
            "type": "string"
          },
          "title": "Inputs",
          "type": "array"
        }
      },
      "title": "Action",
      "type": "object"
    },
    "ActionsChain": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "trigger": {
          "$ref": "#/$defs/Trigger"
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "required": ["trigger"],
      "title": "ActionsChain",
      "type": "object"
    },
    "AgGrid": {
      "additionalProperties": false,
      "description": "Wrapper for `dash-ag-grid.AgGrid` to visualize grids in dashboard.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "ag_grid",
          "default": "ag_grid",
          "title": "Type",
          "type": "string"
        },
        "title": {
          "default": "",
          "description": "Title of the `AgGrid`.",
          "title": "Title",
          "type": "string"
        },
        "header": {
          "default": "",
          "description": "Markdown text positioned below the `AgGrid.title`. Follows the CommonMark specification. Ideal for adding supplementary information such as subtitles, descriptions, or additional context.",
          "title": "Header",
          "type": "string"
        },
        "footer": {
          "default": "",
          "description": "Markdown text positioned below the `AgGrid`. Follows the CommonMark specification. Ideal for providing further details such as sources, disclaimers, or additional notes.",
          "title": "Footer",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "AgGrid",
      "type": "object"
    },
    "Button": {
      "additionalProperties": false,
      "description": "Component provided to `Page` to trigger any defined `action` in `Page`.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "button",
          "default": "button",
          "title": "Type",
          "type": "string"
        },
        "text": {
          "default": "Click me!",
          "description": "Text to be displayed on button.",
          "minLength": 1,
          "title": "Text",
          "type": "string"
        },
        "href": {
          "default": "",
          "description": "URL (relative or absolute) to navigate to.",
          "title": "Href",
          "type": "string"
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        },
        "variant": {
          "default": "filled",
          "description": "Predefined styles to choose from. Options are `plain`, `filled` or `outlined`.Defaults to `filled`.",
          "enum": ["plain", "filled", "outlined"],
          "title": "Variant",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the button text.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        }
      },
      "title": "Button",
      "type": "object"
    },
    "Card": {
      "additionalProperties": false,
      "description": "Creates a card based on Markdown syntax.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "card",
          "default": "card",
          "title": "Type",
          "type": "string"
        },
        "text": {
          "description": "Markdown string to create card title/text that should adhere to the CommonMark Spec.",
          "title": "Text",
          "type": "string"
        },
        "href": {
          "default": "",
          "description": "URL (relative or absolute) to navigate to. If not provided the Card serves as a text card only.",
          "title": "Href",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Card",
      "type": "object"
    },
    "Checklist": {
      "additionalProperties": false,
      "description": "Categorical multi-option selector `Checklist`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or\n[`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "checklist",
          "default": "checklist",
          "title": "Type",
          "type": "string"
        },
        "options": {
          "anyOf": [
            {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/OptionsDictType"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Options"
        },
        "value": {
          "anyOf": [
            {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed",
          "title": "Title",
          "type": "string"
        },
        "show_select_all": {
          "default": true,
          "description": "Whether to display the 'Select All' option that allows users to select or deselect all available options with a single click.",
          "title": "Show Select All",
          "type": "boolean"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "Checklist",
      "type": "object"
    },
    "Container": {
      "additionalProperties": false,
      "description": "Container to group together a set of components on a page.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "container",
          "default": "container",
          "title": "Type",
          "type": "string"
        },
        "components": {
          "items": {
            "description": "Component that makes up part of the layout on the page.",
            "discriminator": {
              "mapping": {
                "ag_grid": "#/$defs/AgGrid",
                "button": "#/$defs/Button",
                "card": "#/$defs/Card",
                "container": "#/$defs/Container",
                "figure": "#/$defs/Figure",
                "graph": "#/$defs/Graph",
                "table": "#/$defs/Table",
                "tabs": "#/$defs/Tabs",
                "text": "#/$defs/Text"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/AgGrid"
              },
              {
                "$ref": "#/$defs/Button"
              },
              {
                "$ref": "#/$defs/Card"
              },
              {
                "$ref": "#/$defs/Container"
              },
              {
                "$ref": "#/$defs/Figure"
              },
              {
                "$ref": "#/$defs/Graph"
              },
              {
                "$ref": "#/$defs/Text"
              },
              {
                "$ref": "#/$defs/Table"
              },
              {
                "$ref": "#/$defs/Tabs"
              }
            ]
          },
          "minItems": 1,
          "title": "Components",
          "type": "array"
        },
        "title": {
          "default": "",
          "description": "Title of the `Container`",
          "title": "Title",
          "type": "string"
        },
        "layout": {
          "anyOf": [
            {
              "description": "Type of layout to place components on the page.",
              "oneOf": [
                {
                  "$ref": "#/$defs/Grid"
                },
                {
                  "$ref": "#/$defs/Flex"
                },
                {
                  "$ref": "#/$defs/Layout"
                }
              ]
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Layout"
        },
        "collapsed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Boolean flag that determines whether the container is collapsed on initial load. Set to `True` for a collapsed state, `False` for an expanded state. Defaults to `None`, meaning the container is not collapsible.",
          "title": "Collapsed"
        },
        "variant": {
          "anyOf": [
            {
              "enum": ["plain", "filled", "outlined"],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Predefined styles to choose from. Options are `plain`, `filled` or `outlined`.Defaults to `plain` (or `outlined` for collapsible container).",
          "title": "Variant"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "controls": {
          "default": [],
          "items": {
            "description": "Control that affects components on the page.",
            "discriminator": {
              "mapping": {
                "filter": "#/$defs/Filter",
                "parameter": "#/$defs/Parameter"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/Filter"
              },
              {
                "$ref": "#/$defs/Parameter"
              }
            ]
          },
          "title": "Controls",
          "type": "array"
        }
      },
      "required": ["components"],
      "title": "Container",
      "type": "object"
    },
    "DatePicker": {
      "additionalProperties": false,
      "description": "Temporal single/range option selector `DatePicker`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or [`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "date_picker",
          "default": "date_picker",
          "title": "Type",
          "type": "string"
        },
        "min": {
          "anyOf": [
            {
              "format": "date",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Start date for date picker.",
          "title": "Min"
        },
        "max": {
          "anyOf": [
            {
              "format": "date",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "End date for date picker.",
          "title": "Max"
        },
        "value": {
          "anyOf": [
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "format": "date",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Default date/dates for date picker.",
          "title": "Value"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed.",
          "title": "Title",
          "type": "string"
        },
        "range": {
          "default": true,
          "description": "Boolean flag for displaying range picker.",
          "title": "Range",
          "type": "boolean"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "DatePicker",
      "type": "object"
    },
    "Dropdown": {
      "additionalProperties": false,
      "description": "Categorical single/multi-option selector `Dropdown`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or\n[`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "dropdown",
          "default": "dropdown",
          "title": "Type",
          "type": "string"
        },
        "options": {
          "anyOf": [
            {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/OptionsDictType"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Options"
        },
        "value": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "format": "date",
              "type": "string"
            },
            {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        },
        "multi": {
          "default": true,
          "description": "Whether to allow selection of multiple values",
          "title": "Multi",
          "type": "boolean"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed",
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "Dropdown",
      "type": "object"
    },
    "Figure": {
      "additionalProperties": false,
      "description": "Creates a figure-like object that can be displayed in the dashboard and is reactive to controls.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "figure",
          "default": "figure",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "Figure",
      "type": "object"
    },
    "Filter": {
      "additionalProperties": false,
      "description": "Filter the data supplied to `targets` on the [`Page`][vizro.models.Page].\n\nExamples:\n    >>> print(repr(Filter(column=\"species\")))",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "filter",
          "default": "filter",
          "title": "Type",
          "type": "string"
        },
        "column": {
          "description": "Column of DataFrame to filter.",
          "title": "Column",
          "type": "string"
        },
        "targets": {
          "default": [],
          "description": "Target component to be affected by filter. If none are given then target all components on the page that use `column`.",
          "items": {
            "type": "string"
          },
          "title": "Targets",
          "type": "array"
        },
        "selector": {
          "anyOf": [
            {
              "description": "Selectors to be used inside a control.",
              "discriminator": {
                "mapping": {
                  "checklist": "#/$defs/Checklist",
                  "date_picker": "#/$defs/DatePicker",
                  "dropdown": "#/$defs/Dropdown",
                  "radio_items": "#/$defs/RadioItems",
                  "range_slider": "#/$defs/RangeSlider",
                  "slider": "#/$defs/Slider"
                },
                "propertyName": "type"
              },
              "oneOf": [
                {
                  "$ref": "#/$defs/Checklist"
                },
                {
                  "$ref": "#/$defs/DatePicker"
                },
                {
                  "$ref": "#/$defs/Dropdown"
                },
                {
                  "$ref": "#/$defs/RadioItems"
                },
                {
                  "$ref": "#/$defs/RangeSlider"
                },
                {
                  "$ref": "#/$defs/Slider"
                }
              ]
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Selector"
        },
        "show_in_url": {
          "default": false,
          "description": "Whether the filter should be included in the URL query string. Defaults to `False`. Useful for bookmarking or sharing dashboards with specific filter values pre-set.",
          "title": "Show In Url",
          "type": "boolean"
        }
      },
      "required": ["column"],
      "title": "Filter",
      "type": "object"
    },
    "Flex": {
      "additionalProperties": false,
      "description": "Flex Container to place chart/components on the [`Page`][vizro.models.Page].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "flex",
          "default": "flex",
          "title": "Type",
          "type": "string"
        },
        "direction": {
          "default": "column",
          "description": "Sets the direction of the flex items inside the container. Options are `row` or `column`.Defaults to `column`.",
          "enum": ["row", "column"],
          "title": "Direction",
          "type": "string"
        },
        "gap": {
          "default": "24px",
          "description": "Specifies the gap between rows and columns. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Gap",
          "type": "string"
        },
        "wrap": {
          "default": false,
          "description": "Determines whether flex items are forced onto a single line or can wrap onto multiple lines. If `False`, all items will be on one line. If `True`, items will wrap onto multiple lines. Defaults to `False`.",
          "title": "Wrap",
          "type": "boolean"
        }
      },
      "title": "Flex",
      "type": "object"
    },
    "Graph": {
      "additionalProperties": false,
      "description": "Wrapper for `dcc.Graph` to visualize charts in dashboard.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "graph",
          "default": "graph",
          "title": "Type",
          "type": "string"
        },
        "title": {
          "default": "",
          "description": "Title of the `Graph`",
          "title": "Title",
          "type": "string"
        },
        "header": {
          "default": "",
          "description": "Markdown text positioned below the `Graph.title`. Follows the CommonMark specification. Ideal for adding supplementary information such as subtitles, descriptions, or additional context.",
          "title": "Header",
          "type": "string"
        },
        "footer": {
          "default": "",
          "description": "Markdown text positioned below the `Graph`. Follows the CommonMark specification. Ideal for providing further details such as sources, disclaimers, or additional notes.",
          "title": "Footer",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "Graph",
      "type": "object"
    },
    "Grid": {
      "additionalProperties": false,
      "description": "Grid specification to place chart/components on the [`Page`][vizro.models.Page].\n\nArgs:\n    type (Literal[\"grid\"]): Defaults to `\"grid\"`.\n    grid (list[list[int]]): Grid specification to arrange components on screen.\n    row_gap (str): Specifies the gap between rows. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.\n    col_gap (str): Specifies the gap between columns. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.\n    row_min_height (str): Minimum row height in px. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `0px`.\n    col_min_width (str): Minimum column width in px. Allowed unit are: 'px', 'rem', 'em', or '%'. Defaults to `0px`.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "grid",
          "default": "grid",
          "title": "Type",
          "type": "string"
        },
        "grid": {
          "description": "Grid specification to arrange components on screen.",
          "items": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "title": "Grid",
          "type": "array"
        },
        "row_gap": {
          "default": "24px",
          "description": "Specifies the gap between rows. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Row Gap",
          "type": "string"
        },
        "col_gap": {
          "default": "24px",
          "description": "Specifies the gap between columns. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Col Gap",
          "type": "string"
        },
        "row_min_height": {
          "default": "0px",
          "description": "Minimum row height in px. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `0px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Row Min Height",
          "type": "string"
        },
        "col_min_width": {
          "default": "0px",
          "description": "Minimum column width in px. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `0px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Col Min Width",
          "type": "string"
        }
      },
      "required": ["grid"],
      "title": "Grid",
      "type": "object"
    },
    "Layout": {
      "additionalProperties": false,
      "deprecated": true,
      "description": "Deprecated. This model has been renamed [`Grid`][vizro.models.Grid].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "legacy_layout",
          "default": "legacy_layout",
          "title": "Type",
          "type": "string"
        },
        "grid": {
          "description": "Grid specification to arrange components on screen.",
          "items": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "title": "Grid",
          "type": "array"
        },
        "row_gap": {
          "default": "24px",
          "description": "Specifies the gap between rows. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Row Gap",
          "type": "string"
        },
        "col_gap": {
          "default": "24px",
          "description": "Specifies the gap between columns. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `24px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Col Gap",
          "type": "string"
        },
        "row_min_height": {
          "default": "0px",
          "description": "Minimum row height in px. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `0px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Row Min Height",
          "type": "string"
        },
        "col_min_width": {
          "default": "0px",
          "description": "Minimum column width in px. Allowed units: 'px', 'rem', 'em', or '%'. Defaults to `0px`.",
          "pattern": "^\\d+(px|rem|em|%)$",
          "title": "Col Min Width",
          "type": "string"
        }
      },
      "required": ["grid"],
      "title": "Layout",
      "type": "object"
    },
    "NavBar": {
      "additionalProperties": false,
      "description": "Navigation bar to be used as a nav_selector for `Navigation`.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "nav_bar",
          "default": "nav_bar",
          "title": "Type",
          "type": "string"
        },
        "pages": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "default": {},
          "description": "Mapping from name of a pages group to a list of page IDs.",
          "title": "Pages",
          "type": "object"
        },
        "items": {
          "default": [],
          "items": {
            "$ref": "#/$defs/NavLink"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "title": "NavBar",
      "type": "object"
    },
    "NavLink": {
      "additionalProperties": false,
      "description": "Icon that serves as a navigation link to be used in navigation bar of Dashboard.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "pages": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": "object"
            }
          ],
          "default": [],
          "title": "Pages"
        },
        "label": {
          "description": "Text description of the icon for use in tooltip.",
          "title": "Label",
          "type": "string"
        },
        "icon": {
          "default": "",
          "description": "Icon name from Google Material icons library.",
          "title": "Icon",
          "type": "string"
        }
      },
      "required": ["label"],
      "title": "NavLink",
      "type": "object"
    },
    "Navigation": {
      "additionalProperties": false,
      "description": "Navigation in [`Dashboard`][vizro.models.Dashboard] to structure [`Pages`][vizro.models.Page].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "pages": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": "object"
            }
          ],
          "default": [],
          "title": "Pages"
        },
        "nav_selector": {
          "anyOf": [
            {
              "description": "Component for rendering navigation.",
              "discriminator": {
                "mapping": {
                  "accordion": "#/$defs/Accordion",
                  "nav_bar": "#/$defs/NavBar"
                },
                "propertyName": "type"
              },
              "oneOf": [
                {
                  "$ref": "#/$defs/Accordion"
                },
                {
                  "$ref": "#/$defs/NavBar"
                }
              ]
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nav Selector"
        }
      },
      "title": "Navigation",
      "type": "object"
    },
    "OptionsDictType": {
      "description": "Permissible sub-type for OptionsType. Needs to be in the format of {\"label\": XXX, \"value\": XXX}.",
      "properties": {
        "label": {
          "title": "Label",
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "format": "date",
              "type": "string"
            }
          ],
          "title": "Value"
        }
      },
      "required": ["label", "value"],
      "title": "OptionsDictType",
      "type": "object"
    },
    "Page": {
      "additionalProperties": false,
      "description": "A page in [`Dashboard`][vizro.models.Dashboard] with its own URL path and place in the `Navigation`.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "components": {
          "items": {
            "description": "Component that makes up part of the layout on the page.",
            "discriminator": {
              "mapping": {
                "ag_grid": "#/$defs/AgGrid",
                "button": "#/$defs/Button",
                "card": "#/$defs/Card",
                "container": "#/$defs/Container",
                "figure": "#/$defs/Figure",
                "graph": "#/$defs/Graph",
                "table": "#/$defs/Table",
                "tabs": "#/$defs/Tabs",
                "text": "#/$defs/Text"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/AgGrid"
              },
              {
                "$ref": "#/$defs/Button"
              },
              {
                "$ref": "#/$defs/Card"
              },
              {
                "$ref": "#/$defs/Container"
              },
              {
                "$ref": "#/$defs/Figure"
              },
              {
                "$ref": "#/$defs/Graph"
              },
              {
                "$ref": "#/$defs/Text"
              },
              {
                "$ref": "#/$defs/Table"
              },
              {
                "$ref": "#/$defs/Tabs"
              }
            ]
          },
          "minItems": 1,
          "title": "Components",
          "type": "array"
        },
        "title": {
          "description": "Title of the `Page`",
          "title": "Title",
          "type": "string"
        },
        "layout": {
          "anyOf": [
            {
              "description": "Type of layout to place components on the page.",
              "oneOf": [
                {
                  "$ref": "#/$defs/Grid"
                },
                {
                  "$ref": "#/$defs/Flex"
                },
                {
                  "$ref": "#/$defs/Layout"
                }
              ]
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Layout"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. This also sets the page's meta\n            tags. Defaults to `None`."
        },
        "controls": {
          "default": [],
          "items": {
            "description": "Control that affects components on the page.",
            "discriminator": {
              "mapping": {
                "filter": "#/$defs/Filter",
                "parameter": "#/$defs/Parameter"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/Filter"
              },
              {
                "$ref": "#/$defs/Parameter"
              }
            ]
          },
          "title": "Controls",
          "type": "array"
        },
        "path": {
          "default": "",
          "description": "Path to navigate to page.",
          "title": "Path",
          "type": "string"
        },
        "actions": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ActionsChain"
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "required": ["components", "title"],
      "title": "Page",
      "type": "object"
    },
    "Parameter": {
      "additionalProperties": false,
      "description": "Alter the arguments supplied to any `targets` on the [`Page`][vizro.models.Page].\n\nExamples:\n    >>> Parameter(targets=[\"scatter.x\"], selector=Slider(min=0, max=1, default=0.8, title=\"Bubble opacity\"))",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "parameter",
          "default": "parameter",
          "title": "Type",
          "type": "string"
        },
        "targets": {
          "items": {
            "description": "Targets in the form of `<target_component>.<target_argument>`.",
            "type": "string"
          },
          "title": "Targets",
          "type": "array"
        },
        "selector": {
          "description": "Selectors to be used inside a control.",
          "discriminator": {
            "mapping": {
              "checklist": "#/$defs/Checklist",
              "date_picker": "#/$defs/DatePicker",
              "dropdown": "#/$defs/Dropdown",
              "radio_items": "#/$defs/RadioItems",
              "range_slider": "#/$defs/RangeSlider",
              "slider": "#/$defs/Slider"
            },
            "propertyName": "type"
          },
          "oneOf": [
            {
              "$ref": "#/$defs/Checklist"
            },
            {
              "$ref": "#/$defs/DatePicker"
            },
            {
              "$ref": "#/$defs/Dropdown"
            },
            {
              "$ref": "#/$defs/RadioItems"
            },
            {
              "$ref": "#/$defs/RangeSlider"
            },
            {
              "$ref": "#/$defs/Slider"
            }
          ],
          "title": "Selector"
        },
        "show_in_url": {
          "default": false,
          "description": "Whether the parameter should be included in the URL query string. Defaults to `False`. Useful for bookmarking or sharing dashboards with specific parameter values pre-set.",
          "title": "Show In Url",
          "type": "boolean"
        }
      },
      "required": ["targets", "selector"],
      "title": "Parameter",
      "type": "object"
    },
    "RadioItems": {
      "additionalProperties": false,
      "description": "Categorical single-option selector `RadioItems`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or\n[`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "radio_items",
          "default": "radio_items",
          "title": "Type",
          "type": "string"
        },
        "options": {
          "anyOf": [
            {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/OptionsDictType"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Options"
        },
        "value": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "format": "date",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed",
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "RadioItems",
      "type": "object"
    },
    "RangeSlider": {
      "additionalProperties": false,
      "description": "Numeric multi-option selector `RangeSlider`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or\n[`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "range_slider",
          "default": "range_slider",
          "title": "Type",
          "type": "string"
        },
        "min": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Start value for slider.",
          "title": "Min"
        },
        "max": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "End value for slider.",
          "title": "Max"
        },
        "step": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Step-size for marks on slider.",
          "title": "Step"
        },
        "marks": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": {},
          "description": "Marks to be displayed on slider.",
          "title": "Marks"
        },
        "value": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed.",
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "RangeSlider",
      "type": "object"
    },
    "Slider": {
      "additionalProperties": false,
      "description": "Numeric single-option selector `Slider`.\n\nCan be provided to [`Filter`][vizro.models.Filter] or\n[`Parameter`][vizro.models.Parameter].",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "slider",
          "default": "slider",
          "title": "Type",
          "type": "string"
        },
        "min": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Start value for slider.",
          "title": "Min"
        },
        "max": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "End value for slider.",
          "title": "Max"
        },
        "step": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Step-size for marks on slider.",
          "title": "Step"
        },
        "marks": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": {},
          "description": "Marks to be displayed on slider.",
          "title": "Marks"
        },
        "value": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Default value for slider.",
          "title": "Value"
        },
        "title": {
          "default": "",
          "description": "Title to be displayed.",
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "Slider",
      "type": "object"
    },
    "Table": {
      "additionalProperties": false,
      "description": "Wrapper for `dash_table.DataTable` to visualize tables in dashboard.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "table",
          "default": "table",
          "title": "Type",
          "type": "string"
        },
        "title": {
          "default": "",
          "description": "Title of the `Table`",
          "title": "Title",
          "type": "string"
        },
        "header": {
          "default": "",
          "description": "Markdown text positioned below the `Table.title`. Follows the CommonMark specification. Ideal for adding supplementary information such as subtitles, descriptions, or additional context.",
          "title": "Header",
          "type": "string"
        },
        "footer": {
          "default": "",
          "description": "Markdown text positioned below the `Table`. Follows the CommonMark specification. Ideal for providing further details such as sources, disclaimers, or additional notes.",
          "title": "Footer",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        },
        "actions": {
          "default": [],
          "items": {
            "description": "Action.",
            "oneOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "$ref": "#/$defs/export_data"
              },
              {
                "$ref": "#/$defs/filter_interaction"
              }
            ]
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "title": "Table",
      "type": "object"
    },
    "Tabs": {
      "additionalProperties": false,
      "description": "Tabs to group together a set of containers on a page.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "tabs",
          "default": "tabs",
          "title": "Type",
          "type": "string"
        },
        "tabs": {
          "items": {
            "$ref": "#/$defs/Container"
          },
          "minItems": 1,
          "title": "Tabs",
          "type": "array"
        },
        "title": {
          "default": "",
          "description": "Title displayed above Tabs.",
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tooltip"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. Defaults to `None`."
        }
      },
      "required": ["tabs"],
      "title": "Tabs",
      "type": "object"
    },
    "Text": {
      "additionalProperties": false,
      "description": "Creates a text component based on Markdown syntax.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        },
        "text": {
          "description": "Markdown string to create text that should adhere to the CommonMark Spec.",
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Text",
      "type": "object"
    },
    "Tooltip": {
      "additionalProperties": false,
      "description": "A tooltip that displays text when hovering over an icon.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "text": {
          "description": "Markdown string for text shown when hovering over the icon. Should adhere to the CommonMark Spec.",
          "title": "Text",
          "type": "string"
        },
        "icon": {
          "description": "Icon name from Google Material icons library.",
          "title": "Icon",
          "type": "string"
        }
      },
      "required": ["text", "icon"],
      "title": "Tooltip",
      "type": "object"
    },
    "Trigger": {
      "maxItems": 2,
      "minItems": 2,
      "prefixItems": [
        {
          "title": "Component Id",
          "type": "string"
        },
        {
          "title": "Component Property",
          "type": "string"
        }
      ],
      "type": "array"
    },
    "export_data": {
      "additionalProperties": false,
      "description": "Exports visible data of target charts/components.\n\nArgs:\n    targets (list[ModelID]): List of target component ids to download data from. If none are given then download\n         from all components on the page.\n    file_format (Literal[\"csv\", \"xlsx\"]): Format of downloaded files. Defaults to `csv`.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "export_data",
          "default": "export_data",
          "title": "Type",
          "type": "string"
        },
        "targets": {
          "default": [],
          "description": "List of target component ids to download data from. If none are given then downloadfrom all components on the page.",
          "items": {
            "type": "string"
          },
          "title": "Targets",
          "type": "array"
        },
        "file_format": {
          "default": "csv",
          "description": "Format of downloaded files. Defaults to `csv`.",
          "enum": ["csv", "xlsx"],
          "title": "File Format",
          "type": "string"
        }
      },
      "title": "export_data",
      "type": "object"
    },
    "filter_interaction": {
      "additionalProperties": false,
      "description": "Filters targeted charts/components on page by clicking on data points or table cells of the source chart.\n\nTo set up filtering on specific columns of the target graph(s), include these columns in the 'custom_data'\nparameter of the source graph e.g. `px.bar(..., custom_data=[\"species\", \"sepal_length\"])`.\nIf the filter interaction source is a table e.g. `vm.Table(..., actions=[filter_interaction])`,\nthen the table doesn't need to have a 'custom_data' parameter set up.\n\nArgs:\n    targets (list[ModelID]): Target component to be affected by filter. If none are given then target all\n        valid components on the page.",
      "properties": {
        "id": {
          "default": "",
          "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "const": "filter_interaction",
          "default": "filter_interaction",
          "title": "Type",
          "type": "string"
        },
        "targets": {
          "default": [],
          "description": "Target component IDs.",
          "items": {
            "type": "string"
          },
          "title": "Targets",
          "type": "array"
        }
      },
      "title": "filter_interaction",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "Vizro Dashboard to be used within [`Vizro`][vizro._vizro.Vizro.build].",
  "properties": {
    "id": {
      "default": "",
      "description": "ID to identify model. Must be unique throughout the whole dashboard.When no ID is chosen, ID will be automatically generated.",
      "title": "Id",
      "type": "string"
    },
    "pages": {
      "items": {
        "$ref": "#/$defs/Page"
      },
      "title": "Pages",
      "type": "array"
    },
    "theme": {
      "default": "vizro_dark",
      "description": "Theme to be applied across dashboard. Defaults to `vizro_dark`.",
      "enum": ["vizro_dark", "vizro_light"],
      "title": "Theme",
      "type": "string"
    },
    "navigation": {
      "anyOf": [
        {
          "$ref": "#/$defs/Navigation"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "title": {
      "default": "",
      "description": "Dashboard title to appear on every page on top left-side.",
      "title": "Title",
      "type": "string"
    },
    "description": {
      "anyOf": [
        {
          "$ref": "#/$defs/Tooltip"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Optional markdown string that adds an icon next to the title.\n            Hovering over the icon shows a tooltip with the provided description. This also sets the page's meta\n            tags. Defaults to `None`."
    }
  },
  "required": ["pages"],
  "title": "Dashboard",
  "type": "object"
}
