[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Vizro Team"}
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]
dependencies = [
  "pandas",
  "tabulate",
  "openai>=1.0.0",
  "langgraph-checkpoint<=1.0.12",  # TODO update to pydantic v2 and remove upper bound (https://github.com/langchain-ai/langgraph/issues/1914)
  "langchain>=0.1.0, <0.3.0",  # TODO update to pydantic v2 and remove upper bound
  "langgraph>=0.1.2, <0.2.17",  # TODO update to pydantic v2 and remove upper bound (latest version break pydantic v1 compatibility)
  "python-dotenv>=1.0.0",  # TODO decide env var management to see if we need this
  "vizro>=0.1.23",
  "langchain_openai",  # Base dependency, ie minimum model working
  "black",
  "autoflake"
]
description = "Vizro-AI is a tool for generating data visualizations"
dynamic = ["version"]
license-files = {paths = ["LICENSE.txt"]}
name = "vizro_ai"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
anthropic = ["langchain-anthropic"]
mistral = ["langchain-mistralai>=0.1.13"]

[tool.coverage.paths]
vizro = ["src/vizro_ai"]  # omit tests for clarity, although this can be useful to see what test lines DID NOT run

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]
fail_under = 45
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = ["vizro_ai"]

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  # Ignore until pandas is made compatible with Python 3.12:
  "ignore:.*utcfromtimestamp:DeprecationWarning",
  # Ignore until pandas 3 is released:
  "ignore:(?s).*Pyarrow will become a required dependency of pandas:DeprecationWarning",
  # TODO update all LLMChain class and remove this warning
  # Ignore LLMchian deprecation warning:
  "ignore:.*The class `LLMChain` was deprecated in LangChain 0.1.17",
  # Ignore warning for Pydantic v1 API and Python 3.13:
  "ignore:Failing to pass a value to the 'type_params' parameter of 'typing.ForwardRef._evaluate' is deprecated:DeprecationWarning"
]

[tool.ruff]
extend = "../pyproject.toml"
src = ["src"]

[tool.ruff.lint.extend-per-file-ignores]
# Ignore print, line length, and import violations in Colab notebooks
"examples/chart_by_vizro_ai.ipynb" = ["T201", "E501"]
"examples/dashboard_by_vizro_ai.ipynb" = ["T201", "E402", "E501"]
