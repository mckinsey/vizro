name: Unit tests for Vizro

defaults:
  run:
    working-directory: vizro-core

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main

env:
  PYTHONUNBUFFERED: 1
  FORCE_COLOR: 1

jobs:
  test-unit-vizro-core:
    name: test-unit-vizro-core on Py${{ matrix.python-env.py }} ${{ matrix.python-env.label }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-env:
          - py: "3.9"
            hatch-env: all.py3.9
            os: ubuntu-latest
          - py: "3.10"
            hatch-env: all.py3.10
            os: ubuntu-latest
          - py: "3.11"
            hatch-env: all.py3.11
            os: ubuntu-latest
          - py: "3.12"
            hatch-env: all.py3.12
            os: ubuntu-latest
          - py: "3.13"
            hatch-env: all.py3.13
            os: ubuntu-latest
          - py: "3.9"
            hatch-env: lower-bounds
            label: lower bounds
            os: ubuntu-latest
          - py: "3.12"
            hatch-env: all.py3.12
            label: Windows
            os: windows-latest
        is_pr: [${{ github.event_name == "pull_request" }}]
        exclude:
          - is_pr: true
            python-version:
              py: "3.12"
              hatch-env: all.py3.12
              label: Windows
              os: windows-latest
        # just use below for labelling and hatch-env so not needed?
        # will still need windows and lower bounds job though
#        include:
#          - python-env:
#            - py: "3.9"
#            - hatch-env: lower-bounds
#            label: lower bounds
#          - python-version: "3.12"
#            hatch-env: all.py3.12
#            is_pr: false
#            os: windows-latest
#            label: Windows

    # Run Windows jobs only on merges to main
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        run: pip install hatch

      - name: Show dependency tree
        run: hatch run ${{ matrix.hatch-env }}:pip tree

      - name: Run unit tests
        run: hatch run ${{ matrix.hatch-env }}:test-unit-coverage
